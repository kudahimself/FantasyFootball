# Generated by Django 5.2.6 on 2025-09-18 06:20

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("MyApi", "0003_playermatch_elo_before_match"),
    ]

    operations = [
        migrations.AlterField(
            model_name="systemsettings",
            name="current_season",
            field=models.CharField(
                default="2025/26",
                help_text="Current season (e.g., 2025/26)",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="PlayerFixture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("player_name", models.CharField(db_index=True, max_length=200)),
                ("team", models.CharField(max_length=100)),
                ("gameweek", models.IntegerField(db_index=True)),
                ("opponent", models.CharField(max_length=100)),
                ("is_home", models.BooleanField(default=True)),
                ("fixture_date", models.DateTimeField(blank=True, null=True)),
                (
                    "competition",
                    models.CharField(default="Premier League", max_length=100),
                ),
                (
                    "difficulty",
                    models.IntegerField(
                        default=3, help_text="FPL difficulty rating (1-5)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "player_fixtures",
                "ordering": ["gameweek", "fixture_date"],
                "indexes": [
                    models.Index(
                        fields=["player_name", "gameweek"],
                        name="player_fixt_player__599346_idx",
                    ),
                    models.Index(
                        fields=["gameweek", "team"],
                        name="player_fixt_gamewee_79ca3b_idx",
                    ),
                    models.Index(
                        fields=["fixture_date"], name="player_fixt_fixture_ebb3d0_idx"
                    ),
                ],
                "unique_together": {("player_name", "gameweek", "opponent")},
            },
        ),
        migrations.CreateModel(
            name="ProjectedPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("player_name", models.CharField(db_index=True, max_length=200)),
                ("gameweek", models.IntegerField(db_index=True)),
                ("opponent", models.CharField(max_length=100)),
                ("is_home", models.BooleanField(default=True)),
                (
                    "current_elo",
                    models.FloatField(help_text="Player's current ELO rating"),
                ),
                ("current_cost", models.FloatField(help_text="Player's current cost")),
                (
                    "competition",
                    models.CharField(default="Premier League", max_length=100),
                ),
                (
                    "league_rating",
                    models.IntegerField(help_text="Competition difficulty rating"),
                ),
                (
                    "expected_points",
                    models.FloatField(
                        help_text="Expected points using ELO formula: k/(1 + 10**(League_Rating/current_elo))"
                    ),
                ),
                (
                    "opposition_strength",
                    models.FloatField(
                        default=1.0,
                        help_text="Opposition strength multiplier (from FPL)",
                    ),
                ),
                (
                    "difficulty_rating",
                    models.IntegerField(
                        default=3, help_text="FPL difficulty rating (1-5)"
                    ),
                ),
                (
                    "adjusted_expected_points",
                    models.FloatField(
                        help_text="Expected points adjusted for opposition strength"
                    ),
                ),
                ("calculated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "k_factor",
                    models.IntegerField(
                        default=20, help_text="K-factor used in calculation"
                    ),
                ),
            ],
            options={
                "db_table": "projected_points",
                "ordering": ["gameweek", "-expected_points"],
                "indexes": [
                    models.Index(
                        fields=["player_name", "gameweek"],
                        name="projected_p_player__02d0c6_idx",
                    ),
                    models.Index(
                        fields=["gameweek"], name="projected_p_gamewee_f4b2e2_idx"
                    ),
                    models.Index(
                        fields=["expected_points"],
                        name="projected_p_expecte_ef6fd2_idx",
                    ),
                    models.Index(
                        fields=["adjusted_expected_points"],
                        name="projected_p_adjuste_bed01a_idx",
                    ),
                ],
                "unique_together": {("player_name", "gameweek", "opponent")},
            },
        ),
    ]
